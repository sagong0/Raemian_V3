<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.ramian_pj.mapper.ReserveMapper">

    <select id="countReserveByMemberId" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM reserve
        WHERE member_id = #{memberId}
          AND status = 'ACTIVE'
    </select>


<!--    <insert id="saveReserve" parameterType="org.example.ramian_pj.dto.ReserveDTO" >-->
<!--        INSERT INTO reserve (-->
<!--            member_id,-->
<!--            reserve_date,-->
<!--            reserve_time,-->
<!--            rcount,-->
<!--            created_at,-->
<!--            updated_at-->
<!--        ) VALUES (-->
<!--                     #{memberId},-->
<!--                     #{rdate},-->
<!--                     #{rtime},-->
<!--                     #{rcount},-->
<!--                     NOW(),-->
<!--                     NOW()-->
<!--                 )-->
<!--    </insert>-->


    <insert id="saveReserve" parameterType="org.example.ramian_pj.dto.ReserveDTO" >
        INSERT INTO reserve (
            member_id,
            reserve_date,
            reserve_time,
            rcount,
            status,
            created_at,
            updated_at
        )
        SELECT #{memberId},
               #{rdate},
               #{rtime},
               #{rcount},
               'ACTIVE',
               NOW(),
               NOW()
        WHERE
        TIMESTAMP(#{rdate}, #{rtime}) >= NOW();
    </insert>





<!--    예약 수정 PART -->
    <update id="modifyReserveByMemberId" parameterType="org.example.ramian_pj.dto.ReserveDTO">
        UPDATE reserve
        SET
            reserve_date = #{rdate},
            reserve_time = #{rtime},
            rcount       = #{rcount},
            modify_count = 1,
            updated_at   = NOW()
        WHERE
            member_id = #{memberId}
          AND status = 'ACTIVE'
          AND modify_count = 0
          AND TIMESTAMP(#{rdate}, #{rtime}) >= NOW()
    </update>






    <select id="getReserveByMemberId">
        SELECT
            member_id,
            reserve_date AS rdate,
            reserve_time AS rtime,
            rcount,
            modify_count AS modifyCount
        FROM reserve
        WHERE
            member_id=#{memberId}
        AND
            status = 'ACTIVE'
        ORDER BY reserve_date DESC
        LIMIT 1;
    </select>

<!--    예약 취소  -->
    <delete id="cancelReserveByMemberId" parameterType="int">
        DELETE FROM reserve
        WHERE member_id = #{memberId}
          AND status = 'ACTIVE'
    </delete>




<!--    For Admin-->
    <resultMap id="adminReserveMap" type="org.example.ramian_pj.dto.AdminReserveDTO">
        <result column="userid"        property="userId"/>
        <result column="name"          property="userName"/>
        <result column="phone"         property="userTell"/>
        <result column="member_id"     property="memberId"/>
        <result column="reserve_date"  property="rdate"/>
        <result column="reserve_time"  property="rtime"/>
        <result column="rcount"        property="rcount"/>
    </resultMap>

    <select id="getAllReservesForAdmin" resultMap="adminReserveMap">
        SELECT
            m.userid,
            m.name,
            m.phone,
            r.member_id,
            r.reserve_date,
            r.reserve_time,
            r.rcount
        FROM reserve r
                 JOIN member m ON r.member_id = m.id
        ORDER BY r.reserve_date DESC, r.reserve_time DESC
    </select>






</mapper>
