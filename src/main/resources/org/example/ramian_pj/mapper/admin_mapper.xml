<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="org.example.ramian_pj.mapper.AdminMapper">    <resultMap id="AdminMemberMap" type="org.example.ramian_pj.dto.AdminMemberDTO">        <id     column="id"            property="id"/>        <result column="department"    property="department"/>        <result column="sub_department" property="subDepartment"/>        <result column="name"          property="name"/>        <result column="userid"        property="userid"/>        <result column="pw"            property="pw"/>        <result column="email"         property="email"/>        <result column="phone"         property="phone"/>        <result column="position"      property="position"/>        <result column="deleted_at"    property="deleted_at"/>    </resultMap>    <select id="getAdmins" resultType="org.example.ramian_pj.dto.AdminMemberDTO">        SELECT            id,            department,            sub_department,            name,            userid,            pw,            email,            phone,            position,            deleted_at        FROM member    </select>    <select id="getAdminsByArea" parameterType="string" resultType="org.example.ramian_pj.dto.AdminMemberDTO">        SELECT * FROM member        WHERE department = #{aarea}        ORDER BY id    </select>    <select id="getAdminById" parameterType="String" resultType="org.example.ramian_pj.dto.AdminMemberDTO">        SELECT            id,            department,            sub_department,            name,            userid,            pw,            email,            phone,            position        FROM member        WHERE            userid = #{aid}          AND            deleted_at IS NULL    </select>    <!--    회원가입시   -->    <insert id="saveAdmin" parameterType="org.example.ramian_pj.dto.AdminJoinDTO">        INSERT INTO member (            department,            sub_department,            name,            userid,            pw,            email,            phone,            position,            created_at,            updated_at        ) VALUES (                     #{aarea},                     #{adept},                     #{aname},                     #{aid},                     #{apw1},                     #{aemail},                     #{atell},                     #{aposition},                     NOW(),                     NOW()                 )    </insert>    <select id="getAdminBySearchOption" resultMap="AdminMemberMap">        SELECT        id,        department,        sub_department,        name,        userid,        pw,        email,        phone,        position,        deleted_at        FROM member        <where>            <!-- 소속(aarea) -->            <if test="searchConditionDTO.aarea != null and searchConditionDTO.aarea != 'all'">                AND department = #{searchConditionDTO.aarea}            </if>            <!-- 키워드 검색 (searchType에 따라 다르게) -->            <if test="searchConditionDTO.keyword != null and searchConditionDTO.keyword != ''">                <choose>                    <when test="searchConditionDTO.searchType == 'name'">                        AND name LIKE CONCAT('%', #{searchConditionDTO.keyword}, '%')                    </when>                    <when test="searchConditionDTO.searchType == 'userid'">                        AND userid LIKE CONCAT('%', #{searchConditionDTO.keyword}, '%')                    </when>                    <when test="searchConditionDTO.searchType == 'phone'">                        AND phone LIKE CONCAT('%', #{searchConditionDTO.keyword}, '%')                    </when>                    <!-- 기본값: name 검색 -->                    <otherwise>                        AND name LIKE CONCAT('%', #{searchConditionDTO.keyword}, '%')                    </otherwise>                </choose>            </if>        </where>        <!-- 정렬 -->        <choose>            <when test="searchConditionDTO.sortBy == 'userid'">                ORDER BY userid            </when>            <when test="searchConditionDTO.sortBy == 'name'">                ORDER BY name            </when>            <when test="searchConditionDTO.sortBy == 'created_at'">                ORDER BY created_at            </when>            <otherwise>                ORDER BY id            </otherwise>        </choose>        <choose>            <when test="searchConditionDTO.order == 'desc'">                DESC            </when>            <otherwise>                ASC            </otherwise>        </choose>        LIMIT #{searchConditionDTO.pageSize} OFFSET #{offset}    </select>    <select id="countSearchAdmins" resultType="int">        SELECT COUNT(*)        FROM member        <where>            <!-- 소속(aarea) 필터 -->            <if test="searchConditionDTO.aarea != null and searchConditionDTO.aarea != 'all'">                AND department = #{searchConditionDTO.aarea}            </if>            <!-- 키워드 검색 -->            <if test="searchConditionDTO.keyword != null and searchConditionDTO.keyword != ''">                <choose>                    <when test="searchConditionDTO.searchType == 'name'">                        AND name LIKE CONCAT('%', #{searchConditionDTO.keyword}, '%')                    </when>                    <when test="searchConditionDTO.searchType == 'userid'">                        AND userid LIKE CONCAT('%', #{searchConditionDTO.keyword}, '%')                    </when>                    <when test="searchConditionDTO.searchType == 'phone'">                        AND phone LIKE CONCAT('%', #{searchConditionDTO.keyword}, '%')                    </when>                    <!-- 기본값: name 기준 검색 -->                    <otherwise>                        AND name LIKE CONCAT('%', #{searchConditionDTO.keyword}, '%')                    </otherwise>                </choose>            </if>        </where>    </select>    <update id="updateAdminStatus">        UPDATE member        SET deleted_at =        <choose>            <when test="status == '퇴직중'"> NOW() </when>            <otherwise> NULL </otherwise>        </choose>        WHERE id = #{id}    </update></mapper>